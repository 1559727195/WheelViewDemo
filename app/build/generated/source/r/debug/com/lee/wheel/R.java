/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.lee.wheel;

public final class R {
  public static final class attr {
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int animationDuration=0x7f010000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f010001;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int galleryStyle=0x7f010002;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int gravity=0x7f010003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int spacing=0x7f010004;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int unselectedAlpha=0x7f010005;
  }
  public static final class dimen {
    public static final int activity_horizontal_margin=0x7f020000;
    public static final int activity_vertical_margin=0x7f020001;
  }
  public static final class drawable {
    public static final int ic_launcher=0x7f030000;
    public static final int wheel_bg=0x7f030001;
    public static final int wheel_val=0x7f030002;
  }
  public static final class id {
    public static final int action_settings=0x7f040000;
    public static final int bottom=0x7f040001;
    public static final int btn_date=0x7f040002;
    public static final int btn_now=0x7f040003;
    public static final int btn_password=0x7f040004;
    public static final int btn_start=0x7f040005;
    public static final int center=0x7f040006;
    public static final int center_horizontal=0x7f040007;
    public static final int center_vertical=0x7f040008;
    public static final int clip_horizontal=0x7f040009;
    public static final int clip_vertical=0x7f04000a;
    public static final int fill=0x7f04000b;
    public static final int fill_horizontal=0x7f04000c;
    public static final int fill_vertical=0x7f04000d;
    public static final int left=0x7f04000e;
    public static final int right=0x7f04000f;
    public static final int sel_date=0x7f040010;
    public static final int sel_password=0x7f040011;
    public static final int top=0x7f040012;
    public static final int wheel1=0x7f040013;
    public static final int wheel2=0x7f040014;
    public static final int wheel3=0x7f040015;
    public static final int wheel4=0x7f040016;
    public static final int wheel_date=0x7f040017;
    public static final int wheel_month=0x7f040018;
    public static final int wheel_year=0x7f040019;
  }
  public static final class layout {
    public static final int activity_main=0x7f050000;
    public static final int wheel_date=0x7f050001;
    public static final int wheel_password=0x7f050002;
  }
  public static final class menu {
    public static final int main=0x7f060000;
  }
  public static final class string {
    public static final int action_settings=0x7f070000;
    public static final int app_name=0x7f070001;
    public static final int hello_world=0x7f070002;
  }
  public static final class style {
    public static final int AppBaseTheme=0x7f080000;
    public static final int AppTheme=0x7f080001;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a AbsSpinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AbsSpinner_entries com.lee.wheel:entries}</code></td><td></td></tr>
     * </table>
     * @see #AbsSpinner_entries
     */
    public static final int[] AbsSpinner={
      0x7f010001
    };
    /**
     * <p>This symbol is the offset where the {@link com.lee.wheel.R.attr#entries}
     * attribute's value can be found in the {@link #AbsSpinner} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.lee.wheel:entries
     */
    public static final int AbsSpinner_entries=0;
    /**
     * Attributes that can be used with a Gallery.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Gallery_animationDuration com.lee.wheel:animationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #Gallery_gravity com.lee.wheel:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Gallery_spacing com.lee.wheel:spacing}</code></td><td></td></tr>
     * <tr><td><code>{@link #Gallery_unselectedAlpha com.lee.wheel:unselectedAlpha}</code></td><td></td></tr>
     * </table>
     * @see #Gallery_animationDuration
     * @see #Gallery_gravity
     * @see #Gallery_spacing
     * @see #Gallery_unselectedAlpha
     */
    public static final int[] Gallery={
      0x7f010000, 0x7f010003, 0x7f010004, 0x7f010005
    };
    /**
     * <p>This symbol is the offset where the {@link com.lee.wheel.R.attr#animationDuration}
     * attribute's value can be found in the {@link #Gallery} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.lee.wheel:animationDuration
     */
    public static final int Gallery_animationDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.lee.wheel.R.attr#gravity}
     * attribute's value can be found in the {@link #Gallery} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.lee.wheel:gravity
     */
    public static final int Gallery_gravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.lee.wheel.R.attr#spacing}
     * attribute's value can be found in the {@link #Gallery} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.lee.wheel:spacing
     */
    public static final int Gallery_spacing=2;
    /**
     * <p>This symbol is the offset where the {@link com.lee.wheel.R.attr#unselectedAlpha}
     * attribute's value can be found in the {@link #Gallery} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.lee.wheel:unselectedAlpha
     */
    public static final int Gallery_unselectedAlpha=3;
  }
}